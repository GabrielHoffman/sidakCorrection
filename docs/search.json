[{"path":"http://gabrielhoffman.github.io/sidakCorrection/articles/sidakCorrection.html","id":"function-to-compute-using-multiple-methods","dir":"Articles","previous_headings":"","what":"Function to compute using multiple methods","title":"Numerically stable Sidak correction","text":"","code":"library(ggplot2) library(tidyverse) library(sidakCorrection)  sidak <- function(p, n, method = c(\"adaptive\", \"double\", \"mpfr\", \"taylor\"), precBits = 1000) {    method <- match.arg(method)    switch(method,      \"double\" = 1 - (1 - p)^n,     \"mpfr\" = {       p_mpfr <- Rmpfr::mpfr(p, precBits = precBits)       as.numeric(1 - (1 - p_mpfr)^as.integer(n) )},     \"taylor\" = {       # Set the cutoff to be 1, so the Taylor series        # is always used       sidakCorrection(p,n, 1)     },     \"adaptive\" = {       sidakCorrection(p,n)       }) }"},{"path":"http://gabrielhoffman.github.io/sidakCorrection/articles/sidakCorrection.html","id":"example-for-single-p-values","dir":"Articles","previous_headings":"","what":"Example for single p-values","title":"Numerically stable Sidak correction","text":"","code":"p = 1e-18 n = 1e5  sidak(p, n, \"double\") ## [1] 0 sidak(p, n, \"mpfr\") ## [1] 1e-13 sidak(p, n, \"taylor\") ## [1] 1e-13 sidak(p, n, \"adaptive\") ## [1] 1e-13"},{"path":"http://gabrielhoffman.github.io/sidakCorrection/articles/sidakCorrection.html","id":"compare-methods","dir":"Articles","previous_headings":"","what":"Compare methods","title":"Numerically stable Sidak correction","text":"plot values computing Sidak correction using * adaptive approach using either double precision Taylor series depending value p * High precision Rmpfr * standard approach using double precision arithmetic * Taylor series  see double precision approach deviates high precision method small values p, Taylor series deviates large values p. adpative approach used bo sidakCorrection() function matches high precision method.","code":"x = 10^-seq(0, 20, length.out=100)  df = tibble(x = x,    \"Standard (double)\" = sidak(x, n, \"double\"),    \"High precision (mpfr)\" = sidak(x, n, \"mpfr\", 1000),    \"Taylor series\" = sidak(x, n, \"taylor\"),    \"Adaptive\" = sidak(x, n, \"adaptive\")) %>%   pivot_longer(!x)    df %>% ggplot(aes(x, value, color=name, linetype=name)) +   geom_line(linewidth=2) +   theme_classic() +   theme(aspect.ratio=1) +    scale_x_log10()  +    scale_y_log10( limits=c(1e-19, 1e3)) +   xlab(\"Input p-value (log10 scale)\") +   ylab(\"Sidak corrected p-value (log10 scale)\")"},{"path":"http://gabrielhoffman.github.io/sidakCorrection/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gabriel Hoffman. Author, maintainer.","code":""},{"path":"http://gabrielhoffman.github.io/sidakCorrection/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hoffman G (2025). sidakCorrection: Compute Sidak Corrected p-Values Account Multiple Testing. R package version 1.0, https://github.com/GabrielHoffman/sidakCorrection.","code":"@Manual{,   title = {sidakCorrection: Compute Sidak Corrected p-Values to Account for Multiple Testing},   author = {Gabriel Hoffman},   year = {2025},   note = {R package version 1.0},   url = {https://github.com/GabrielHoffman/sidakCorrection}, }"},{"path":"http://gabrielhoffman.github.io/sidakCorrection/index.html","id":"compute-sidak-corrected-p-values-to-account-for-multiple-testing","dir":"","previous_headings":"","what":"Compute Sidak corrected p-values to account for multiple testing","title":"Compute Sidak Corrected p-Values to Account for Multiple Testing","text":"Sidak method used minimum p-value across multiple tests must corrected number tests performed. Letting p smallest k p-values, Sidak corrected p-values 1 - (1-p)^k. formula simple, can suffer numerical underflow p small. , use Taylor series compute corrected p-value even case small p.","code":""},{"path":"http://gabrielhoffman.github.io/sidakCorrection/reference/sidakCorrection.html","id":null,"dir":"Reference","previous_headings":"","what":"Sidak correction with high precision — sidakCorrection","title":"Sidak correction with high precision — sidakCorrection","text":"Apply Sidak correction smallest p-value selected set n p-values.","code":""},{"path":"http://gabrielhoffman.github.io/sidakCorrection/reference/sidakCorrection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sidak correction with high precision — sidakCorrection","text":"","code":"sidakCorrection(p, n, cutoff = 1e-12)"},{"path":"http://gabrielhoffman.github.io/sidakCorrection/reference/sidakCorrection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sidak correction with high precision — sidakCorrection","text":"p array p-value, entry selected minimum n p-values n array entry number p-values tested cutoff p-values less cutoff, Taylor series used.  Otherwise standard formula used","code":""},{"path":"http://gabrielhoffman.github.io/sidakCorrection/reference/sidakCorrection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sidak correction with high precision — sidakCorrection","text":"summarizing results n statistical tests, simply reporting minimum p-value, p,  inflates false positive rate.  Instead, p must corrected number tests.  Sidak corrected p-value \\(1 - (1 - p)^n\\).  uniformly distributed null individual tests satisfy null. works well statistically, evaluating formula p small can suffer numerical underflow.  produces Sidak-corrected p-values 0, instead true value.  caused rounding errors floating point arithmetic.  example, \\(p = 1e-16\\), \\(1-p\\) rounds 1 due finite precision. applications genetics, p can often small returning Sidak-corrected p-value causes problems downstream analysis. consider 2 ways compute Sidak correction increased precision. First, use Rmpfr library perform calculation high precision available standard double.  calculation simple enough using code .  1) >100x slower, 2) hard predict precision level test, 3) requires high precision library.  last point issue R, can become problem typical C/C++ program. Instead, use Taylor series approximation gives precise estimates even small p-values.  Taylor series approximations widely used evaluate special functions like sin(), log(), etc.  case, 4th order Taylor series $$n * p + (n * (n-1) / 2) * p^2 + (n * (n-1) * (n-2) / 6) * p^3$$ performs well small values p, poorly large p.  Therefore, standard formula used p > cutoff, Taylor series used otherwize.  default, cutoff = 1e-12.","code":""},{"path":"http://gabrielhoffman.github.io/sidakCorrection/reference/sidakCorrection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sidak correction with high precision — sidakCorrection","text":"","code":"p = 1e-5 # p-value n = 1000 # number of tests  # Sidak-corrected p-value sidakCorrection(p, n) #> [1] 0.009950216  # Same calculation using Rmpfr high precision library # with precision set to 200 bits p_mpfr <- Rmpfr::mpfr(p, precBits = 200) as.numeric(1 - (1 - p_mpfr)^n) #> [1] 0.009950216  # Simlate minimum p-values  res = lapply(1:20, function(i){    n = rpois(1, 1000) # number of tests   p.min = min(runif(n)) # minimum p-value    data.frame(p.min = p.min, n = n)   }) res = do.call(rbind, res)  # Apply Sidak-correction for each row sidakCorrection( res$p.min, res$n) #>  [1] 0.09924890 0.62413644 0.19486543 0.76903013 0.43504305 0.81562726 #>  [7] 0.88342493 0.38778401 0.11527269 0.57463850 0.54207740 0.02458395 #> [13] 0.47414275 0.77080744 0.43219570 0.54291846 0.94113838 0.60049509 #> [19] 0.50383606 0.31765200"}]
